"""""""""
# [60점] 해체쇼 (권장 풀이 시간: 10분)

## 설명
천재 회로 설계자 유채민은 4차원 공간에 양자 프로세서를 설계하는 방법을 알아냈습니다.
사람들은 이 설계도를 알아내고 싶어하지만 구하기 힘들 뿐더러, 구한다고 해도 유채민만의 암호로 작성되어 있어 해독하기 힘든 설계도입니다.
그러나 유채민과 친한 사이였던 천재 해커 정현민은 유채민이 사용한 암호화 기법이 '소수(Prime)'임을 알고 있습니다.

유채민의 설계도에 사용되는 부품들은 모두 소수로 된 ID가 부여되어 있으며, 설계도의 최종 ID는 모든 부품들의 ID 곱으로 이루어져 있습니다.

예를 들어, ID가 2로 지정된 부품 2개, ID가 7로 지정된 부품 3개를 사용한다면, 이 설계도의 ID는 1372입니다.

천재 해커 정현민을 도와 설계도의 ID가 주어지면 사용되는 부품을 해독해내는 함수 decrypt를 정의하세요.

허용 라이브러리: 없음

## 입력 설명
설계도의 ID가 int 타입으로 입력됩니다.

## 출력 설명
부품들의 ID를 List로 나열하여 반환해야 합니다. (부품 ID들의 순서는 상관없습니다.)


### 입력 예시 1 
1372
### 출력 예시 1
[2, 2, 7, 7, 7]

### 입력 예시 2 
2310
### 출력 예시 2
[2, 3, 5, 7, 11]

### 입력 예시 3 
4096
### 출력 예시 3
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
"""""""""

def decrypt(num: int) -> list[int]:
    factor = []
    i = 2
    while num > 1:
        if num % i:
            i += 1
        else:
            num //= i
            factor.append(i)
    return factor


if __name__ == "__main__":
    arg1 = int(input())
    print(decrypt(arg1))
